devtools::check()
devtools::load_all()
overwintering::calculate_CI
devtools::check()
devtools::check()
devtools::uses_testthat()
devtools::use_testthat()
usethis::use_testthat()
usethis::use_test("Main functions.R")
usethis::use_test("Main_functions.R")
devtools::check()
devtools::check()
devtools::check()
usethis::use_test("Main_functions.R")
devtools::check()
devtools::load_all()
data(package="overwintering")
data(experiment_course, package="overwintering")
View(experiment_course)
data(ant_removal, package="overwintering")
View(ant_removal)
View(ant_removal)
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::load_all()
?overwintering::hgeom_numbers
?overwintering::track_CI_change
roxygen2::roxygenise()
?overwintering::track_CI_change
roxygen2::roxygenise()
?overwintering::track_CI_change
roxygen2::roxygenise()
?overwintering::track_CI_change
roxygen2::roxygenise()
?overwintering::track_CI_change
roxygen2::roxygenise()
?overwintering::hgeom_numbers
=======
getwd()
ls("package:base")
grep("^file.*$",ls("package:base"))
grep("^file.*$",ls("package:base"), value = TRUE)
grep("^dir.*$",ls("package:base"), value = TRUE)
dir.create("temp")
file("temp/tempfile")
conn <- file("temp/tempfile")
close(conn)
system.file("tempfile")
system.file("tempfile", package = "overwintering")
system.file("data.R")
load_all()
devtools::load_all()
system.file("data.R")
system.file("data.R", package = "overwintering")
ScalarReal()
>>>>>>> eb37558 (documentation corrections)
rmultinom(10,1, rep(0.2,5))
sQuote("Data")
sQuote(Data)
paste0(sQuote("Data"), "abs")
x ,y <-1
x <- y <-1
y
x
?range
?findInterval
?outer
outer(1:3, c(10,20))
x <- seq(1,3, length.out = 30)
x
x2 <- seq(1,30, length.out = 30)
x1 <- c(3,6,8)
x2 <- seq(1,30, length.out = 300)
findInterval(x1,x2)
x2[findInterval(x1,x2)]
x1
df <- data.frame(x = 4, yfoobarbaz = 5)
df$y
?mapply
?lapply(list, function)
?lapply
c(1,2,3) %>% do.call(abs, .)
library(dplyr)
c(1,2,3) %>% do.call(abs, .)
list(1,2,3) %>% do.call(abs, .)
list(1,2,3) %>% do.call(abs, .x)
list(1,2,3) %>% do.call(abs, .)
do.call(abs, list(1,2,3))
do.call(function(x) x*2, list(1,2,3))
list(1,2,3)
do.call(abs, as.list(c(1,2,3)))
devtools::load_all()
roxygen2::roxygenise()
devtools::load_all()
head(experiment_course)
head(summary_data)
colnames(ant_removal)
colnames(experiment_course)
library(dplyr)
experiment_course <- select(experiment_course, -removed_total)
usethis::use_data(experiment_course)
usethis::use_data(experiment_course, overwrite = TRUE)
?mapply
fun <- function(x , y) x+y
mapply(fun, 1:10, 5)
mapply(fun, 1:10, 1)
fun <- function(x, ... , y) x+y
mapply(fun, 1:10, 11:20, y=1)
mapply(fun, 1:10, 11:20, y=5)
devtools::load_all()
devtools::load_all()
do.call(get_prob_mass, as.list(unlist(ant_removal[1,]))))
do.call(get_prob_mass, as.list(unlist(ant_removal[1,])))
colnames(experiment_course)
experiment_course <- rename(experiment_course, unmarked = Unmared)
experiment_course <- rename(experiment_course, unmarked = Unmarked)
colnames(ant_removal)
usethis::use_data(experiment_course, overwrite = TRUE)
devtools::load_all()
do.call(get_prob_mass, as.list(unlist(ant_removal[1,])))
colnames(experiment_course)
colnames(ant_removal)
do.call(get_prob_mass, as.list(unlist(experiment_course[1,])))
dataset <- dplyr::left_join(experiment_course,
select(ant_removal, colony, N1, N2))
do.call(get_prob_mass, as.list(unlist(experiment_course[1,])))
do.call(get_prob_mass, as.list(unlist(dataset[1,])))
as.list(unlist(dataset[1,]))
colnames(ant_removal)
dataset <- dplyr::left_join(experiment_course,
select(ant_removal, colony, N1, N2, marked_1, marked_2))
do.call(get_prob_mass, as.list(unlist(dataset[1,])))
devtools::load_all()
do.call(get_prob_mass, as.list(unlist(dataset[1,])))
do.call(get_prob_mass, as.list(unlist(dataset[1:10,])))
do.call(get_prob_mass, as.list(unlist(dataset[2,])))
track_CI_change()
devtools::load_all()
track_CI_change()
debugonce(track_CI_change)
track_CI_change()
track_CI_change()
debugonce(track_CI_change)
track_CI_change()
head(data)
head(dataset)
list(head(dataset))
as.list(head(dataset))
temp <- as.list(head(dataset))
mapply(get_prob_mass, temp)
temp$removed_2
mapply(get_prob_mass, temp)
temp <- select(temp, removed_1, removed_2, unmarked, marked_1, marked_2,
N1, N2, everything())
temp <- as.data.frame(temp)
temp
temp <- select(temp, removed_1, removed_2, unmarked, marked_1, marked_2,
N1, N2, everything())
temp
mapply(get_prob_mass, temp)
mapply(get_prob_mass, as.list(temp))
mapply(get_prob_mass, temp[1,])
mapply(get_prob_mass, temp[1,1], temp[1,2])
do.call(mapply(get_prob_mass, as.list(temp)))
do.call(mapply, c(get_prob_mass, as.list(temp)))
temp2 <- do.call(mapply, c(get_prob_mass, as.list(temp)))
temp2[1,2]
temp2 <- do.call(mapply, c(get_prob_mass, as.list(temp), simplify = FALSE))
temp2
?do.call
temp2 <- do.call(mapply, c(get_prob_mass, as.list(temp[1,])))
temp2
temp2 <- as.list(do.call(mapply, c(get_prob_mass, as.list(temp), simplify = FALSE))_
temp2 <- as.list(do.call(mapply, c(get_prob_mass, as.list(temp), simplify = FALSE)))
temp2
is.list(temp2)
temp2 <- (do.call(mapply, c(get_prob_mass, as.list(temp), simplify = FALSE))
)
is.list(temp2)
lapply(calculate_CI, temp2)
lapply(temp2, calculate_CI, alpha = 0.05)
lapply(as.data.frame(temp2), calculate_CI, alpha = 0.05)
as.data.frame(temp2)
do.call(get_prob_mass, as.list(unlist(dataset[2,])))
library(purrr)
?pmap
pmap(get_prob_mass, dataset)
pmap(dataset, get_prob_mass)
devtools::load_all()
track_CI_change()
devtools::load_all()
track_CI_change()
devtools::load_all()
track_CI_change()
figure5()
figure_5()
debugonce(track_CI_change)
track_CI_change()
colnames(data)
colnames(data)
data[nrow(data),]
temp3 <- do.call(get_prob_mass, as.list(data[nrow(data),]))
temp3
calculate_CI(temp3, alpha = 0.05)
temp4 <- do.call(get_prob_mass, c(as.list(data[nrow(data),]), null_model = TRUE))
calculate_CI(temp4, alpha = 0.05)
temp4
sum(temp4$prob)
sum(temp4$prob[-1])
sum(temp4$prob[1:34])
sum(temp4$prob[1:30])
sum(temp4$prob[1:20])
sum(temp4$prob[1:15])
devtools::load_all()
track_CI_change()
figure_5()
devtools::test()
usethis::use_test("removal_experiment.R")
0.9/100*6
0.9/100*5
roxygen2::roxygenise()
figure_5()
?rmultinom
t(matrix(1:4, nrow=2))
(matrix(1:4, nrow=2))
library(purrr)
devtools::load_all()
temp <- experiment_course
data(package = "overwintering")
data(experiment_course ,package = "overwintering")
temp <- experiment_course
temp <- split(temp, temp$colony)
temp <- lapply(temp, function(x){
x$duration <- x$Date - x$Date[1]
x})
temp <- do.call(rbind, temp)
temp
experiment_course <- temp
usethis::use_data(experiment_course)
usethis::use_data(experiment_course, overwrite = TRUE)
temp <- matrix(1:10, nrow =2)
pmap(temp, function(...), print(as.list(...)))
pmap(temp, function(...) print(as.list(...)))
pmap(as.data.frame(temp), function(...) print(as.list(...)))
pmap(as.data.frame(temp), ~print(as.list(...)))
pmap(as.data.frame(temp), ~print(list(.x, .y)))
pmap(as.data.frame(temp), ~print(c(.x, .y)))
pmap(as.data.frame(temp), ~print(c(...)))
pmap(as.data.frame(temp), ~lm(c(...)~1:5)))
pmap(as.data.frame(temp), ~lm(c(...)~1:5))
pmap(as.data.frame(temp), ~lm(c(...)~10:15))
pmap(as.data.frame(temp), ~lm(...~10:15))
pmap(as.data.frame(temp), ~{x <- c(...); print(x); lm(x~10:15)})
pmap(as.data.frame(temp), ~c(...))
temp2 <- pmap(as.data.frame(temp), ~c(...))
temp2[[1]]
lm(temp2[[1]]~1:5)
lm(temp2[[1]]~temp2[[2]])
typeof(temp2[[1]])
length(temp2[[1]])
temp3 <- (temp2[[1]])
temp3
lm(temp3~1:5)
lm(temp3~1:6)
lm(temp3~c(1:6))
lm(temp3~c(1:5))
lm(temp3~c(1:5))$coeff[2]
devtools::load_all()
experiment_course[1,]
calculate_regr_coeffs(experiment_course)
roxygen2::roxygenise()
devtools::load_all()
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
devtools::load_all()
calculate_regr_coeffs(experiment_course)
roxygen2::roxygenise()
devtools::load_all()
calculate_regr_coeffs(experiment_course)
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
usethis::use_package(dplyr)
usethis::use_package("dplyr")
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
libary(purrr)
library(purrr)
temp <- list(1:2, 4:5)
temp
temp2 <- function(x, y) c(x, y)
pmap_dfr(temp, temp2)
temp1
temp
names(temp) <- c("a", "b")
pmap_dfr(temp, temp2)
pmap(temp, temp2)
temp
length(temp)
as.data.frame(temp)
temp3 <- as.data.frame(temp)
pmap(temp3, temp2)
pmap_dfr(temp3, temp2)
temp2
map(1:3, abs())
map(1:3, abs)
pmap(1:3, mean)
pmap(as.list(1:3), mean)
pmap(list(1:3), mean)
pmap(list(1:3, 3:6), mean)
pmap(list(1:3, 3:5), mean)
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
debugonce(calculate_regr_coeffs)
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
debugonce(calculate_regr_coeffs)
calculate_regr_coeffs(experiment_course)
timing
timing
rmultino\
rmultinom(1,1,rep(0.2,5))
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
temp <- matrix(1:12, nrow= 3)
temp
as.logical(temp)
class(tep)
class(temp)
typeof(temp)
typeof(temp) <- "logical"
str(temp)
attributes(temp)
apply(temp, 2, as.logical)
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
temp
temp <- matrix(round(runif(12)), nrow= 3)
temp
temp <- apply(temp, 2, as.logical)
temp
1:3[temp]
apply(temp, 2, function(x) 1:3[x])
apply(temp, 2, function(x) c(1:3)[x])
temp
temp[3,1] <- FALSE
temp[2,3] <- TRUE
temp[2,2] <- TRUE
temp
apply(temp, 2, function(x) c(1:3)[x])
devtools::load_all(".")
calculate_regr_coeffs(experiment_course)
devtools::load_all(".")
debugonce(calculate_regr_coeffs)
calculate_regr_coeffs()
coeffs
rmultinom(1, 20, rep(0.5,2))
rmultinom(20, 1, rep(0.5,2))
devtools::load_all(".")
calculate_regr_coeffs()
devtools::load_all(".")
calculate_regr_coeffs()
rlang::last_error()
rlang::last_trace()
temp
as.list(temp)
list(temp)
data.frame(temp)
devtools::load_all(".")
calculate_regr_coeffs()
temp <- list(1,2,3)
names(temp)[1] <- "abc"
temp
calculate_regr_coeffs()
temp[[4]] <-5
temp
names(temp)[4] <- "ab"
temp
devtools::load_all(".")
calculate_regr_coeffs()
calculate_regr_coeffs(randomize = TRUE)
calculate_regr_coeffs(randomize = TRUE, sample_size = 2)
devtools::load_all(".")
calculate_regr_coeffs(randomize = TRUE, sample_size = 2)
library(ggplot2)
unlist(a=2,b=4)
unlist(list(a=2,b=4))
?unlist
?unlist
unlist(list(a=2:5,b=4))
grep("[0-9]{2}-[0-9]{2}", "18-204")
grep("[0-9]{2}-[0-9]{2}", "18-204", value = TRUE)
grep("[0-9]{2}-[0-9]{2}", "18-204", value = TRUE)
grep("[0-9]{2}-[0-9]{2}", "18-20b", value = TRUE)
grep("([0-9]{2}-[0-9]{2})", "18-20b", value = TRUE)
?grep
regexpr("[0-9]{2}-[0-9]{2}", "18-20b")
regexpc("[0-9]{2}-[0-9]{2}", "18-20b")
regexpec("[0-9]{2}-[0-9]{2}", "18-20b")
regexec("[0-9]{2}-[0-9]{2}", "18-20b")
regexec("([0-9]{2}-[0-9]{2})", "18-20b")
regexec("([0-9]{2}-[0-9]{2}).*", "18-20b")
regexpr("[0-9]{2}-[0-9]{2}", "18-20b")
ant_removal
as.data.frame(1:6)
temp <- regexpr("[0-9]{2}-[0-9]{2}", "18-20b")
temp[[1]]
temp[[2]]
temp
temp <- regexex("[0-9]{2}-[0-9]{2}", "18-20b")
temp <- regexec("[0-9]{2}-[0-9]{2}", "18-20b")
temp[[1]]
library(stringi)
stri_extract("[0-9]{2}-[0-9]{2}", "18-20b")
stri_extract(regex="[0-9]{2}-[0-9]{2}", "18-20b")
?mapply
usethis::use_package("stringi")
usethis::use_package("purrr")
HDInterval::hdi(runif(100))
HDInterval::hdi(runif(100))[1]
HDInterval::hdi(runif(100))[2]
3>2 & 1<7
3>2 & 1<0
usethis::use_package("HDInterval")
usethis::use_package("ggplot2")
usethis::use_package("ggplot2", type = "Depends")
?geom_density
temp <- data.frame(a=1:10, b=1:10, c=rep(c("a","b"),5))
ggplot(temp) +
ggplot(temp, aes(x=a, y=b)) +
geom_line(aes(lty=c))
devtools::load_all(".")
devtools::load_all(".")
figure_6()
devtools::load_all(".")
figure_6(sample_size = 100)
as.data.frame(x = .)
temp <- . %>% as.data.frame(.)
temp(1:10)
temp <- . %>% as.data.frame(a=.)
temp(1:10)
temp <- . %>% as.data.frame(.)
rename(temp, new)
dplyr::rename(temp, new)
temp(1:10)
temp2 <- temp(1:10)
dplyr::rename(temp2, new)
?dplyr::rename
temp <- . %>% as.data.frame(.) %>% rename_with(function(x) "new", everything())
temp(1:10)
library(dplyr)
temp(1:10)
?everything
usethis::use_package("tidyselect")
tydiselect::
devtools::load_all(".")
figure_6()
figure_6(sample_size = 100)
rlang::last_trace()
devtools::load_all(".")
figure_6(sample_size = 100)
temp <- HDInterval::hdi(runif(100))
temp2 <- runif(50)
temp2 <- temp2>temp[1]&temp2<temp[2]
temp2
devtools::load_all(".")
figure_6(sample_size = 100)
devtools::load_all(".")
figure_6(sample_size = 100)
devtools::load_all(".")
figure_6(sample_size = 100)
library(ggplot2)
?geom_area
devtools::load_all()
install.packages("HDInterval")
devtools::load_all()
figure_6()
figure_6(sample_size = 100)
roxygen2::roxygenise()
devtools::load_all()
figure_6(sample_size = 100)
df <- data.frame(x = 1:10, y = 21:30)
subset(df, x>5)
subset(df, "x">5)
?subset
devtools::load_all()
figure_6(sample_size = 100)
devtools::load_all()
figure_6(sample_size = 100)
devtools::load_all()
figure_6(sample_size = 100)
devtools::load_all()
figure_6(sample_size = 100)
devtools::load_all()
figure_6(sample_size = 100)
devtools::load_all()
figure_6(sample_size = 100)
devtools::load_all()
figure_6(sample_size = 100)
BiocManager::install("SingleCellMultiModal")
browseVignettes("SingleCellMultiModal")
doWithOneRestart()
